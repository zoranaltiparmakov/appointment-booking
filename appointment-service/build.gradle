plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id "com.google.protobuf" version "0.8.19"
    id 'java'
}

group = 'com.altiparmakov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.3")
}

protobuf {
    // Use protoc binary from repository in case not installed on the system path.
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
}

sourceSets {
    main {
        java {
            // Explicitly tell the gradle where protobuf generated java classes are located
            // in order to be accessed from Java source files
            srcDirs 'build/generated/source/proto/main'
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'com.google.protobuf:protobuf-java:3.21.4'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
